# Generated by Django 5.0.1 on 2025-08-31 22:35

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('employees', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.RemoveField(
            model_name='department',
            name='manager',
        ),
        migrations.AlterModelOptions(
            name='department',
            options={'ordering': ['name']},
        ),
        migrations.AddField(
            model_name='department',
            name='budget',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True),
        ),
        migrations.AddField(
            model_name='department',
            name='head',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='headed_departments', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='department',
            name='is_active',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='department',
            name='location',
            field=models.CharField(blank=True, max_length=200),
        ),
        migrations.AddField(
            model_name='department',
            name='parent_department',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sub_departments', to='employees.department'),
        ),
        migrations.AlterField(
            model_name='department',
            name='code',
            field=models.CharField(max_length=20, unique=True),
        ),
        migrations.AlterField(
            model_name='department',
            name='id',
            field=models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False),
        ),
        migrations.AlterModelTable(
            name='department',
            table='departments',
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('degree_type', models.CharField(choices=[('high_school', 'High School'), ('associate', 'Associate Degree'), ('bachelor', 'Bachelor Degree'), ('master', 'Master Degree'), ('doctorate', 'Doctorate'), ('diploma', 'Diploma'), ('certificate', 'Certificate'), ('other', 'Other')], max_length=20)),
                ('field_of_study', models.CharField(max_length=200)),
                ('institution', models.CharField(max_length=200)),
                ('location', models.CharField(blank=True, max_length=200)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('is_current', models.BooleanField(default=False)),
                ('grade', models.CharField(blank=True, max_length=20)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='education', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'education',
                'ordering': ['-end_date', '-start_date'],
            },
        ),
        migrations.CreateModel(
            name='EmployeeDocument',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('document_type', models.CharField(choices=[('resume', 'Resume/CV'), ('contract', 'Employment Contract'), ('id', 'ID Document'), ('passport', 'Passport'), ('degree', 'Educational Degree'), ('certificate', 'Certificate'), ('license', 'Professional License'), ('medical', 'Medical Document'), ('tax', 'Tax Document'), ('bank', 'Bank Document'), ('other', 'Other')], max_length=20)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('file', models.FileField(upload_to='employee_documents/%Y/%m/')),
                ('file_size', models.IntegerField(help_text='File size in bytes')),
                ('mime_type', models.CharField(max_length=100)),
                ('is_verified', models.BooleanField(default=False)),
                ('verified_at', models.DateTimeField(blank=True, null=True)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to=settings.AUTH_USER_MODEL)),
                ('verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_documents', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'employee_documents',
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='EmploymentHistory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('company_name', models.CharField(max_length=200)),
                ('position', models.CharField(max_length=100)),
                ('department', models.CharField(blank=True, max_length=100)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('is_current', models.BooleanField(default=False)),
                ('responsibilities', models.TextField(blank=True)),
                ('achievements', models.TextField(blank=True)),
                ('reason_for_leaving', models.TextField(blank=True)),
                ('reference_name', models.CharField(blank=True, max_length=100)),
                ('reference_contact', models.CharField(blank=True, max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employment_history', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'employment_history',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=20, unique=True)),
                ('level', models.CharField(choices=[('entry', 'Entry Level'), ('junior', 'Junior'), ('mid', 'Mid Level'), ('senior', 'Senior'), ('lead', 'Lead'), ('manager', 'Manager'), ('director', 'Director'), ('executive', 'Executive')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('responsibilities', models.JSONField(blank=True, default=list)),
                ('requirements', models.JSONField(blank=True, default=list)),
                ('skills_required', models.JSONField(blank=True, default=list)),
                ('min_salary', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('max_salary', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='positions', to='employees.department')),
            ],
            options={
                'db_table': 'positions',
                'ordering': ['department', 'level', 'title'],
                'unique_together': {('title', 'department')},
            },
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('category', models.CharField(blank=True, max_length=50)),
                ('proficiency', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced'), ('expert', 'Expert')], max_length=20)),
                ('years_of_experience', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('certification', models.CharField(blank=True, max_length=200)),
                ('certification_date', models.DateField(blank=True, null=True)),
                ('certification_expiry', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employee_skills', to=settings.AUTH_USER_MODEL)),
                ('verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_skills', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'skills',
                'ordering': ['category', 'name'],
                'unique_together': {('employee', 'name')},
            },
        ),
        migrations.DeleteModel(
            name='Employee',
        ),
    ]
